// generated by Fast Light User Interface Designer (fluid) version 1.0108

#ifndef Mixer_Strip_H
#define Mixer_Strip_H
#include <FL/Fl.H>
#include "DPM.H"
#include "Panner.H"
#include <FL/Fl_Scalepack.H>
#include <FL/Fl_Pack.H>
#include <FL/Fl_Flip_Button.H>
#include <FL/Fl_Arc_Dial.H>
#include <FL/Boxtypes.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Value_Slider.H>
#include <FL/Fl_Counter.H>
#include <FL/Fl_Progress.H>
#include <FL/Fl_Input.H>
//#include "Fader.H"
#include <JACK/Port.H>


#include "../FL/Fl_Sometimes_Input.H"

#include "Loggable.H"
class Chain;
class Fl_Flowpack;

class Mixer_Strip : public Fl_Group, public Loggable {

public:

    Mixer_Strip(int X, int Y, int W, int H, const char *L = 0);
    Mixer_Strip( const char *name, int channels );
    Mixer_Strip();                                              /* for log create */
    ~Mixer_Strip();

//    Fl_Value_Slider *gain_slider;
    Fl_Flip_Button *prepost_button;
    Fl_Button *close_button;
    Fl_Input *name_field;

    Fl_Flowpack *controls_pack;

    Chain *chain;

    sample_t **chain_buffer;
    int chain_buffers;

    nframes_t nframes;

private:

    unsigned _color;

    void init ( );
    void cb_handle(Fl_Widget*);
    static void cb_handle(Fl_Widget*, void*);

    void update_port_names ( void );

protected:

    void get ( Log_Entry &e ) const;
    void set ( Log_Entry &e );

    virtual int handle ( int m );

public:

    void color ( Fl_Color c )
        {
            _color = c;
            name_field->color( _color );
            name_field->redraw();
        }

    Fl_Color color ( void ) const
        {
            return name_field->color();
        }

    LOG_CREATE_FUNC( Mixer_Strip );

    void process ( unsigned int nframes );

    static void configure_outputs ( Fl_Widget *o, void *v );
    void configure_outputs ( void );

    bool configure_ports ( int n );

    void update ( void );

    // int channels ( void ) const { return _in.size(); }
    void name ( const char *name );
    const char *name ( void ) const { return label(); }
};
#endif
